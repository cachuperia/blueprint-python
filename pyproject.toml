[tool.poetry]
name = "blueprint-python"
version = "0.1.0"
description = "GitHub template for Python package blueprint"
authors = ["Iaroslav Russkykh <me@elruso.im>"]
license = "MIT"
repository = "https://github.com/cachuperia/blueprint-python"
documentation = "https://github.com/cachuperia/blueprint-python"
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Typing :: Typed",
    # PyPI will always reject packages with classifiers beginning with "Private ::"
    "Private :: Do Not Upload",
]

[tool.poetry.dependencies]
python = "^3.11, <4.0"

loguru = "*"
typer = "*"

[tool.poetry.group.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-dotenv = "*"

mypy = "*"  # check https://github.com/python/typeshed/tree/master/stubs for stubs

detect-secrets = "1.4.0"
ruff = "0.3.4"

[tool.poetry.extras]

[tool.poetry.scripts]
blueprint-python = "blueprint_python:cli.cli"

[tool.black]
line-length = 120
target-version = ['py311']


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
output-format = "concise"
show-fixes = true
# Same as black
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
#    "D", # pydocstyle
#    "E", # pycodestyle
#    "F", # Pyflakes
#    "S" # Bandit
    "ALL"
]
ignore = ["ANN101", "ANN102", ]
# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["ANN001", "ANN201", "D103", "INP001", "S101"]
"__init__.py" = []

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.semantic_release]
version_variable = [
    "pyproject.toml:version"
]
version_pattern = [
    "Makefile:^VERSION := {version}"
]
upload_to_pypi = false
upload_to_release = false
commit_subject = "chore(release): {version} [skip actions]"
